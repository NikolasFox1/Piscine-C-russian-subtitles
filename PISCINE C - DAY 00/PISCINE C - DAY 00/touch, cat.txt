1
00:00:05,739 --> 00:00:09,207
Итак, мы посмотрели, что такое файловая система и как её просматривать.

2
00:00:09,207 --> 00:00:12,077
Надеюсь, вы помните, как это делать самостоятельно ...

3
00:00:12,077 --> 00:00:16,046
Давайте рассмотрим командные строки, которые будут полезны для остальной части учебного лагеря Си.

4
00:00:16,046 --> 00:00:18,336
Это будет полезная пора.

5
00:00:18,639 --> 00:00:22,069
Первая командная строка - «touch» - создать файл.

6
00:00:22,746 --> 00:00:26,429
«cat» - просмотр содержимого файла

7
00:00:26,429 --> 00:00:29,429
(отображает содержимое файла на экране).

8
00:00:29,429 --> 00:00:31,619
"cp" - копировать.

9
00:00:31,684 --> 00:00:34,064
«mv» - перемещать.

10
00:00:34,219 --> 00:00:37,969
«rm» - удалить, как уже видели ранее.

11
00:00:38,161 --> 00:00:42,161
«chmod» - (режим изменения) изменяет права доступа к объектам файловой системы.

12
00:00:42,257 --> 00:00:46,257
Это важно знать, чтобы уклоняться от шалостей одноклассников на рабочем месте.

13
00:00:48,058 --> 00:00:50,008
Они всё равно попытаются.

14
00:00:51,137 --> 00:00:54,297
Так. Первая командная строка: «touch»

15
00:00:54,415 --> 00:00:58,415
Как обычно, давайте попробуем.

16
00:00:58,857 --> 00:01:02,857
По-видимому, «touch» сама по себе бесполезна. Давайте вызовем «man touch».

17
00:01:05,357 --> 00:01:09,357
Как обычно: синопсис, описание и параметры (и т. д.).

18
00:01:12,116 --> 00:01:13,526
Так что «touch» ...

19
00:01:13,578 --> 00:01:16,478
Если я наберу «cd», затем «pwd» я вхожу в свой каталог.

20
00:01:16,609 --> 00:01:19,799
«ls -la» - перечисляет все файлы в этом каталоге.

21
00:01:19,870 --> 00:01:23,870
Давайте создадим новый каталог: «mkdir Krpestbeau» (Krp - огонь (фр.))

22
00:01:25,075 --> 00:01:29,075
«ls», мой каталог создан.

23
00:01:29,935 --> 00:01:33,935
Заййдём внутрь: «cd Krpestbeau» - «ls» он пуст (я только что создал его).

24
00:01:34,638 --> 00:01:38,638
Теперь давайте создадим наш первый файл: «touch beeoneestpasbeau» (быть кем-то неогонь (фр.))

25
00:01:44,239 --> 00:01:48,239
Здесь мы идем: «ls -la» - мой новый файл находится здесь.

26
00:01:50,978 --> 00:01:54,978
Просто, чтобы вы знали, если вы это сделаете: «touch beeone est pas beau».

27
00:01:56,499 --> 00:02:01,979
Вот что произойдйт - см. На экране. Вы вполне сможете разобраться самостоятельно.

28
00:02:05,513 --> 00:02:09,513
И теперь, если вы хотите почистить тут, вы можете использовать командную строку «rm».

29
00:02:11,441 --> 00:02:15,031
Я собираюсь добавить кое-что в командную строку «rm» ...

30
00:02:15,106 --> 00:02:19,106
Вы можете понять это сами;) Но не забудьте применять это с осторожностью.

31
00:02:21,129 --> 00:02:25,129
Итак, мы рассмотрели «touch».

32
00:02:25,974 --> 00:02:29,974
Теперь, когда мы можем создавать файлы, давайте посмотрим их содержимое.

33
00:02:31,754 --> 00:02:35,224
Для этого мы будем использовать следующую командную строку: «cat».

34
00:02:35,244 --> 00:02:39,234
Я не буду читать вам «man» каждый раз, надеюсь, вы освоили его к настоящему времени ...

35
00:02:39,605 --> 00:02:46,065
Итак, «cat» на «файл».c (или какой-либо тип файла, если на то пошло)

36
00:02:47,915 --> 00:02:51,915
Все, что в этом файле будет отображаться на экране.

37
00:02:52,814 --> 00:02:57,484
Работает над всем: files.c, files.txt, двоичные файлы (мы увидим это позже).

38
00:02:57,484 --> 00:03:01,484
Вы, вероятно, будете удивлены, так как это работает по-разному в этих случаях ...

39
00:03:03,153 --> 00:03:05,673
Что ж теперь я знаю, как создать файл.

40
00:03:05,729 --> 00:03:07,939
Я также знаю, как заглянуть внутрь.

41
00:03:08,099 --> 00:03:10,899
Теперь мне нужно научиться копировать файл.

42
00:03:11,508 --> 00:03:15,508
Вернёмся к моему замечательному каталогу, который пуст.

43
00:03:17,126 --> 00:03:21,126
«touch» что-то оригинальное - имя файла не имеет значения.

44
00:03:26,311 --> 00:03:30,311
"ls". Да, это здесь.

45
00:03:31,059 --> 00:03:35,059
Ооооооо! Я сделал ошибку!

46
00:03:35,059 --> 00:03:39,059
Это в моем каталоге Krpestbeau, я хотел иметь его в своём домашнем каталоге ...

47
00:03:40,803 --> 00:03:44,803
Все в порядке, я знаю «cp».

48
00:03:45,604 --> 00:03:50,274
«cp источник (source) назначение (destination)» ссточник = файл; назначение = папка / каталог.

49
00:03:50,650 --> 00:03:54,650
Вы заметите, что «источник и назначение» довольно стандартные в "Unix".

50
00:03:55,693 --> 00:03:59,693
Итак, «cp myfile ..», где «..» является родительским каталогом.

51
00:03:59,703 --> 00:04:03,383
В данном случае это мой домашний каталог.

52
00:04:04,493 --> 00:04:07,023
Если я сделаю «ls», мой файл все ещё здесь.

53
00:04:07,023 --> 00:04:13,303
И если я делаю «cd ..», тогда «ls» также обнаружит мой файл, поскольку он был скопирован.

54
00:04:16,490 --> 00:04:20,490
Если я удалю этот с помощью «rm», файл исчезнет ...

55
00:04:22,779 --> 00:04:26,779
Но оригинальная версия всё ещё существует.

56
00:04:28,346 --> 00:04:31,216
Я создал копию своего файла, но я хотел его переместить ...

57
00:04:31,706 --> 00:04:34,716
Я снова ошибся ... Растеряша.


58
00:04:34,816 --> 00:04:37,936
Я попробую ещё раз, и на этот раз я сделаю всё правильно, не копируя его.

59
00:04:37,936 --> 00:04:39,576
Поэтому я собираюсь попробовать «mv».

60
00:04:39,671 --> 00:04:41,991
Все командные строки "Unix" имеют довольно прямые имена ...

61
00:04:41,991 --> 00:04:45,991
"cp" = copy, "mv" = move, "ls" = list и т. д.

62
00:04:46,309 --> 00:04:51,389
Итак, "mv источник назначение"

63
00:04:53,141 --> 00:04:57,141
Если мы сделаем «ls», мы увидим, что он исчез.

64
00:05:01,451 --> 00:05:05,451
Если мы делаем «cd ..», то «ls», файл тут!

65
00:05:08,520 --> 00:05:12,520
Немного больше: «date» - мы видим, что временная метка соответствует моей последней модификации

66
00:05:18,012 --> 00:05:22,012
Итак, я знаю, как двигаться, как копировать и как стирать ...

67
00:05:22,803 --> 00:05:24,703
Понимаете, исчезло.

68
00:05:25,192 --> 00:05:28,602
Последняя тема на сегодня: «chmod».

69
00:05:28,702 --> 00:05:32,702
«chmod» - изменяет режимы, как показывает его название

70
00:05:32,732 --> 00:05:35,192
Это, если быть точнее, изменяет разрешения.

71
00:05:35,444 --> 00:05:38,574
Вернёмся к моему каталогу.

72
00:05:38,747 --> 00:05:42,287
Маленькое предупреждение: "Юникс" очень чувствителен к регистру.

73
00:05:42,287 --> 00:05:45,383
Полагаю, вы уже это знали, но случай если всё таки не...

74
00:05:45,383 --> 00:05:49,323
Это означает, что если вы добавите прописную букву к имени файла, у которого их не было,

75
00:05:49,323 --> 00:05:51,163
это будет учтено.

76
00:05:51,163 --> 00:05:55,173
Теперь у вас может быть два файла с тем же именем, один в верхнем регистре, другой в нижнем регистре ...

77
00:05:55,173 --> 00:05:56,610
Эти два файла отличаются.

78
00:05:56,910 --> 00:05:58,200
Вернёмся к "chmod"

79
00:05:58,200 --> 00:06:03,490
Итак, «touch newfile»

80
00:06:04,165 --> 00:06:07,165
«ls», он здесь.

81
00:06:10,167 --> 00:06:13,167
Вы знаете расположение этих столбцов ...

82
00:06:13,990 --> 00:06:19,170
Помните столбец разрешения? Здесь нет «d», поэтому мы уверены, что это файл.

83
00:06:19,277 --> 00:06:23,277
«r» для чтения, «w» для записи и «x» для выполнения.

84
00:06:24,743 --> 00:06:28,743
Первый набор из трех букв («r», «w», «x») - это ваши разрешения для этого файла.

85
00:06:31,673 --> 00:06:35,673
Второй набор из 3 букв - это разрешения для вашей группы.

86
00:06:36,404 --> 00:06:38,774
(В этом случае группой является "Персонал" - "Staff")

87
00:06:38,879 --> 00:06:41,609
И третий набор для остального мира.

88
00:06:41,854 --> 00:06:45,854
Это люди, которые не вы и кто не входит в вашу группу.

89
00:06:46,508 --> 00:06:50,508
Я собираюсь показать вам пару вещей, как и для остальных.

90
00:06:50,534 --> 00:06:54,534
Вы можете разобраться сами, как взрослые, с «man».

91
00:06:55,201 --> 00:06:59,041
Если мы наберём «chmod 000 myfile»,

92
00:06:59,041 --> 00:07:03,041
так: 0 для меня, 0 для моей группы, 0 для остальных.

93
00:07:07,766 --> 00:07:10,019
Что происходит? Попробуйте "ls -la"

94
00:07:10,019 --> 00:07:13,419
Проверьте столбец разрешений: больше никаких прав для кого-либо.

95
00:07:13,419 --> 00:07:16,629
Вы спросите: «Как мне восстановить права?»

96
00:07:16,629 --> 00:07:19,919
"Юникс" умный, он знает, чей это файл: он принадлежит вам.

97
00:07:20,050 --> 00:07:25,350
Поэтому, если вы наберете «chmod 700 myfile» 7 для вас, 0 для вас группа и остальные.

98
00:07:28,839 --> 00:07:32,839
«ls -la» - простой «ls» не дает вам информации о разрешениях.

99
00:07:37,547 --> 00:07:41,547
Теперь у меня есть права на чтение, запись и выполнение.

100
00:07:43,384 --> 00:07:47,384
У моей группы и остального мира нет разрешений.

101
00:07:47,996 --> 00:07:51,996
Если кто-то, кроме вас, пытается получить доступ к этому файлу, они не смогут.

102
00:07:52,047 --> 00:07:56,047
Они не смогут прочитать его, вызвать «cat» на него, скопировать или что-нибудь ещё.

103
00:07:58,262 --> 00:08:02,262
Если я хочу, чтобы люди просто читали мой файл

104
00:08:09,872 --> 00:08:12,312
"chmod 644 myfile" Что случилось?

105
00:08:13,625 --> 00:08:18,935
У меня есть права на чтение и запись. Вы заметите, что мой «х» исчез.

106
00:08:19,752 --> 00:08:23,752
Мне это не нужно, потому что мой файл является текстовым файлом, он не является двоичным файлом,

107
00:08:23,752 --> 00:08:26,942
поэтому мне не нужно его выполнять.

108
00:08:28,080 --> 00:08:32,080
Моя группа может читать, и так может и весь остальной мир.

109
00:08:32,080 --> 00:08:36,080
Однако у них нет «w», поэтому они не могут его модифицировать.

110
00:08:36,464 --> 00:08:42,424
Но если они заходят в ваш каталог и вызывают "cat", они могут читать её содержимое.

111
00:08:43,783 --> 00:08:47,523
В этом случае он пуст, но если бы он не был, они бы выяснили это.

112
00:08:48,036 --> 00:08:51,606
«chmod» кажется немного сложным по началу. Вы должны привыкнуть к этому.

113
00:08:51,790 --> 00:08:55,790
Вы должны проверить его с помощью различных комбинаций цифр, чтобы увидеть, что они делают.

114
00:08:57,468 --> 00:09:01,468
Например, что делает «chmod 555»? (для всех поклонников Subaru)

115
00:09:01,726 --> 00:09:05,316
«ls -la» - что-то случилось ... разрешения изменились.

116
00:09:05,726 --> 00:09:08,076
Попробуйте и выясните это.

117
00:09:08,298 --> 00:09:11,758
И не беспокойтесь, если вы случайно удалите все свои собственные разрешения,

118
00:09:11,758 --> 00:09:13,578
У вас есть возможность отменить.
